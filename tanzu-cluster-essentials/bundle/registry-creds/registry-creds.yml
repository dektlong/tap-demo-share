#@ load("@ytt:json", "json")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")

#@ if hasattr(data.values, "secretgenController"):
#@   ns = data.values.secretgenController.namespace
#@ else:
#@   load("/values.star", "kappNamespace")
#@   ns = kappNamespace
#@ end

#@ secret_name = ns + "-registry-creds"

---
apiVersion: v1
kind: Secret
metadata:
  name: #@ secret_name
  namespace: #@ ns
type: kubernetes.io/dockerconfigjson
data:
  #@ docker_auth = base64.encode("{}:{}".format(data.values.registry.username, data.values.registry.password))
  #@ docker_creds = {"username": data.values.registry.username, "password": data.values.registry.password, "auth": docker_auth}
  .dockerconfigjson: #@ base64.encode(json.encode({"auths": {data.values.registry.server: docker_creds}}))

#@overlay/match by=overlay.subset({"kind": "Deployment"}),expects="1+"
---
spec:
  template:
    spec:
      #@overlay/match missing_ok=True
      imagePullSecrets:
      - name: #@ secret_name
